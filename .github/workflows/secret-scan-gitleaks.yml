name: Secret Scanning with Gitleaks

on:
  # Run on pull requests
  pull_request:
    branches: ['*']
  
  # Run on pushes to all branches
  push:
    branches: ['*']
  
  # Allow manual runs with options
  workflow_dispatch:
    inputs:
      full_history:
        description: 'Scan full git history'
        required: false
        default: 'true'
        type: choice
        options:
        - 'true'
        - 'false'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for complete scanning
          
      - name: Install Gitleaks
        run: |
          GITLEAKS_VERSION="8.18.4"
          wget -O gitleaks.tar.gz "https://github.com/gitleaks/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks_${GITLEAKS_VERSION}_linux_x64.tar.gz"
          tar -xzf gitleaks.tar.gz
          sudo mv gitleaks /usr/local/bin/
          gitleaks version
          
      - name: Run Gitleaks
        id: gitleaks
        run: |
          # Determine scan options based on trigger and input
          SCAN_OPTS=""
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            if [[ "${{ inputs.full_history }}" == "true" ]]; then
              SCAN_OPTS="--log-opts=--all"
            fi
          elif [[ "${{ github.event_name }}" == "push" ]]; then
            # For push events, scan full history to catch any secrets
            SCAN_OPTS="--log-opts=--all"
          fi
          # For pull_request, scan only the changes (default behavior)
          
          echo "Running Gitleaks with options: $SCAN_OPTS"
          
          # Run Gitleaks and capture exit code
          set +e
          gitleaks detect \
            --config=.gitleaks.toml \
            --report-format=sarif \
            --report-path=gitleaks.sarif \
            --redact \
            --verbose \
            $SCAN_OPTS
          GITLEAKS_EXIT_CODE=$?
          set -e
          
          echo "gitleaks_exit_code=$GITLEAKS_EXIT_CODE" >> $GITHUB_OUTPUT
          
          # Log results
          if [[ $GITLEAKS_EXIT_CODE -eq 0 ]]; then
            echo "✅ No secrets detected"
          else
            echo "⚠️ Potential secrets detected (exit code: $GITLEAKS_EXIT_CODE)"
            if [[ -f gitleaks.sarif ]]; then
              echo "SARIF report generated: gitleaks.sarif"
            fi
          fi
          
      - name: Upload SARIF results to GitHub Security
        if: always() && hashFiles('gitleaks.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gitleaks.sarif
          category: gitleaks
          
      - name: Upload Gitleaks SARIF as artifact
        if: always() && hashFiles('gitleaks.sarif') != ''
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-sarif
          path: gitleaks.sarif
          retention-days: 30
          
      - name: Fail job on PR if secrets detected
        if: github.event_name == 'pull_request' && steps.gitleaks.outputs.gitleaks_exit_code != '0'
        run: |
          echo "❌ Secrets detected in pull request. Please review and remove them."
          echo "Check the Security tab for detailed findings."
          exit 1
          
      - name: Job summary
        if: always()
        run: |
          echo "## 🔍 Secret Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.gitleaks.outputs.gitleaks_exit_code }}" == "0" ]]; then
            echo "✅ **No secrets detected**" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ **Potential secrets detected**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Check the [Security tab](https://github.com/${{ github.repository }}/security/code-scanning) for details" >> $GITHUB_STEP_SUMMARY
            echo "- Download the SARIF artifact for local analysis" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan Details:**" >> $GITHUB_STEP_SUMMARY
          echo "- Event: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "- Full History: ${{ inputs.full_history }}" >> $GITHUB_STEP_SUMMARY
          fi